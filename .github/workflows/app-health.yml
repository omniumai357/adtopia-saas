name: App Health Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run health check daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  health-check:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Start application
      run: |
        npm start &
        sleep 10
      env:
        NODE_ENV: production
        
    - name: Run app health check
      run: npm run test:app-health
      env:
        NEXT_PUBLIC_SITE_URL: http://localhost:3000
        
    - name: Generate health report
      if: always()
      run: |
        mkdir -p qa/reports
        echo "Health check completed at $(date)" > qa/reports/health-summary.txt
        echo "Node version: ${{ matrix.node-version }}" >> qa/reports/health-summary.txt
        echo "Status: ${{ job.status }}" >> qa/reports/health-summary.txt
        
    - name: Upload health report
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: app-health-report-${{ matrix.node-version }}
        path: qa/reports/
        retention-days: 30
        
    - name: Comment PR with health status
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let status = '✅ Health check passed';
          let details = 'All app health checks completed successfully';
          
          if (process.env.HEALTH_CHECK_FAILED === 'true') {
            status = '❌ Health check failed';
            details = 'App health checks detected issues. Check the logs for details.';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## App Health Check Results
            
            **Status:** ${status}
            
            **Details:** ${details}
            
            **Node Version:** ${{ matrix.node-version }}
            
            **Timestamp:** ${new Date().toISOString()}
            
            ---
            *Automated health check by AdTopia CI/CD*`
          });

  performance-check:
    runs-on: ubuntu-latest
    needs: health-check
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Start application
      run: |
        npm start &
        sleep 10
        
    - name: Run performance check
      run: npm run diagnose:app -- --route=/app --verbose
      env:
        NEXT_PUBLIC_SITE_URL: http://localhost:3000
        
    - name: Upload performance report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: performance-report
        path: qa/reports/
        retention-days: 7

  security-check:
    runs-on: ubuntu-latest
    needs: health-check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for vulnerabilities
      run: |
        if npm audit --audit-level=high --json | jq -e '.vulnerabilities | length > 0'; then
          echo "High-severity vulnerabilities found"
          exit 1
        else
          echo "No high-severity vulnerabilities found"
        fi
        
    - name: Upload security report
      if: always()
      run: |
        npm audit --json > qa/reports/security-audit.json
        echo "Security check completed at $(date)" > qa/reports/security-summary.txt
        
    - name: Upload security artifacts
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: qa/reports/security-*
        retention-days: 30
